// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: lsb.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BattleResult int32

const (
	BattleResult_UNKNOWN       BattleResult = 0
	BattleResult_DUNGEON_CLEAR BattleResult = 1
	BattleResult_DUNGEON_FAIL  BattleResult = 2
)

// Enum value maps for BattleResult.
var (
	BattleResult_name = map[int32]string{
		0: "UNKNOWN",
		1: "DUNGEON_CLEAR",
		2: "DUNGEON_FAIL",
	}
	BattleResult_value = map[string]int32{
		"UNKNOWN":       0,
		"DUNGEON_CLEAR": 1,
		"DUNGEON_FAIL":  2,
	}
)

func (x BattleResult) Enum() *BattleResult {
	p := new(BattleResult)
	*p = x
	return p
}

func (x BattleResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BattleResult) Descriptor() protoreflect.EnumDescriptor {
	return file_lsb_proto_enumTypes[0].Descriptor()
}

func (BattleResult) Type() protoreflect.EnumType {
	return &file_lsb_proto_enumTypes[0]
}

func (x BattleResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BattleResult.Descriptor instead.
func (BattleResult) EnumDescriptor() ([]byte, []int) {
	return file_lsb_proto_rawDescGZIP(), []int{0}
}

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ts *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=ts,proto3" json:"ts,omitempty"`
	// Types that are assignable to Data:
	//
	//	*Event_Spawn
	//	*Event_Remove
	//	*Event_Counter
	//	*Event_Death
	//	*Event_Damage
	//	*Event_Trigger
	//	*Event_StatusEffectAdd
	//	*Event_StatusEffectUpdate
	//	*Event_StatusEffectRemove
	//	*Event_SkillUse
	//	*Event_StaggerState
	//	*Event_PlayerHealth
	Data isEvent_Data `protobuf_oneof:"data"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsb_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_lsb_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_lsb_proto_rawDescGZIP(), []int{0}
}

func (x *Event) GetTs() *timestamppb.Timestamp {
	if x != nil {
		return x.Ts
	}
	return nil
}

func (m *Event) GetData() isEvent_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *Event) GetSpawn() *EventSpawn {
	if x, ok := x.GetData().(*Event_Spawn); ok {
		return x.Spawn
	}
	return nil
}

func (x *Event) GetRemove() *EventRemove {
	if x, ok := x.GetData().(*Event_Remove); ok {
		return x.Remove
	}
	return nil
}

func (x *Event) GetCounter() *EventCounter {
	if x, ok := x.GetData().(*Event_Counter); ok {
		return x.Counter
	}
	return nil
}

func (x *Event) GetDeath() *EventDeath {
	if x, ok := x.GetData().(*Event_Death); ok {
		return x.Death
	}
	return nil
}

func (x *Event) GetDamage() *EventDamage {
	if x, ok := x.GetData().(*Event_Damage); ok {
		return x.Damage
	}
	return nil
}

func (x *Event) GetTrigger() *EventTrigger {
	if x, ok := x.GetData().(*Event_Trigger); ok {
		return x.Trigger
	}
	return nil
}

func (x *Event) GetStatusEffectAdd() *EventStatusEffectAdd {
	if x, ok := x.GetData().(*Event_StatusEffectAdd); ok {
		return x.StatusEffectAdd
	}
	return nil
}

func (x *Event) GetStatusEffectUpdate() *EventStatusEffectUpdate {
	if x, ok := x.GetData().(*Event_StatusEffectUpdate); ok {
		return x.StatusEffectUpdate
	}
	return nil
}

func (x *Event) GetStatusEffectRemove() *EventStatusEffectRemove {
	if x, ok := x.GetData().(*Event_StatusEffectRemove); ok {
		return x.StatusEffectRemove
	}
	return nil
}

func (x *Event) GetSkillUse() *EventSkillUse {
	if x, ok := x.GetData().(*Event_SkillUse); ok {
		return x.SkillUse
	}
	return nil
}

func (x *Event) GetStaggerState() *EventStaggerState {
	if x, ok := x.GetData().(*Event_StaggerState); ok {
		return x.StaggerState
	}
	return nil
}

func (x *Event) GetPlayerHealth() *EventPlayerHealth {
	if x, ok := x.GetData().(*Event_PlayerHealth); ok {
		return x.PlayerHealth
	}
	return nil
}

type isEvent_Data interface {
	isEvent_Data()
}

type Event_Spawn struct {
	Spawn *EventSpawn `protobuf:"bytes,3,opt,name=spawn,proto3,oneof"`
}

type Event_Remove struct {
	Remove *EventRemove `protobuf:"bytes,4,opt,name=remove,proto3,oneof"`
}

type Event_Counter struct {
	Counter *EventCounter `protobuf:"bytes,5,opt,name=counter,proto3,oneof"`
}

type Event_Death struct {
	Death *EventDeath `protobuf:"bytes,6,opt,name=death,proto3,oneof"`
}

type Event_Damage struct {
	Damage *EventDamage `protobuf:"bytes,7,opt,name=damage,proto3,oneof"`
}

type Event_Trigger struct {
	Trigger *EventTrigger `protobuf:"bytes,8,opt,name=trigger,proto3,oneof"`
}

type Event_StatusEffectAdd struct {
	StatusEffectAdd *EventStatusEffectAdd `protobuf:"bytes,9,opt,name=status_effect_add,json=statusEffectAdd,proto3,oneof"`
}

type Event_StatusEffectUpdate struct {
	StatusEffectUpdate *EventStatusEffectUpdate `protobuf:"bytes,10,opt,name=status_effect_update,json=statusEffectUpdate,proto3,oneof"`
}

type Event_StatusEffectRemove struct {
	StatusEffectRemove *EventStatusEffectRemove `protobuf:"bytes,11,opt,name=status_effect_remove,json=statusEffectRemove,proto3,oneof"`
}

type Event_SkillUse struct {
	SkillUse *EventSkillUse `protobuf:"bytes,12,opt,name=skill_use,json=skillUse,proto3,oneof"`
}

type Event_StaggerState struct {
	StaggerState *EventStaggerState `protobuf:"bytes,13,opt,name=stagger_state,json=staggerState,proto3,oneof"`
}

type Event_PlayerHealth struct {
	PlayerHealth *EventPlayerHealth `protobuf:"bytes,15,opt,name=player_health,json=playerHealth,proto3,oneof"`
}

func (*Event_Spawn) isEvent_Data() {}

func (*Event_Remove) isEvent_Data() {}

func (*Event_Counter) isEvent_Data() {}

func (*Event_Death) isEvent_Data() {}

func (*Event_Damage) isEvent_Data() {}

func (*Event_Trigger) isEvent_Data() {}

func (*Event_StatusEffectAdd) isEvent_Data() {}

func (*Event_StatusEffectUpdate) isEvent_Data() {}

func (*Event_StatusEffectRemove) isEvent_Data() {}

func (*Event_SkillUse) isEvent_Data() {}

func (*Event_StaggerState) isEvent_Data() {}

func (*Event_PlayerHealth) isEvent_Data() {}

type EventRotate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reason string `protobuf:"bytes,1,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *EventRotate) Reset() {
	*x = EventRotate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsb_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventRotate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventRotate) ProtoMessage() {}

func (x *EventRotate) ProtoReflect() protoreflect.Message {
	mi := &file_lsb_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventRotate.ProtoReflect.Descriptor instead.
func (*EventRotate) Descriptor() ([]byte, []int) {
	return file_lsb_proto_rawDescGZIP(), []int{1}
}

func (x *EventRotate) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type EventSpawn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectId uint64 `protobuf:"varint,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	// Types that are assignable to Object:
	//
	//	*EventSpawn_Entity
	//	*EventSpawn_CharacterId
	//	*EventSpawn_Player
	Object isEventSpawn_Object `protobuf_oneof:"object"`
}

func (x *EventSpawn) Reset() {
	*x = EventSpawn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsb_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventSpawn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSpawn) ProtoMessage() {}

func (x *EventSpawn) ProtoReflect() protoreflect.Message {
	mi := &file_lsb_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventSpawn.ProtoReflect.Descriptor instead.
func (*EventSpawn) Descriptor() ([]byte, []int) {
	return file_lsb_proto_rawDescGZIP(), []int{2}
}

func (x *EventSpawn) GetObjectId() uint64 {
	if x != nil {
		return x.ObjectId
	}
	return 0
}

func (m *EventSpawn) GetObject() isEventSpawn_Object {
	if m != nil {
		return m.Object
	}
	return nil
}

func (x *EventSpawn) GetEntity() *Entity {
	if x, ok := x.GetObject().(*EventSpawn_Entity); ok {
		return x.Entity
	}
	return nil
}

func (x *EventSpawn) GetCharacterId() uint64 {
	if x, ok := x.GetObject().(*EventSpawn_CharacterId); ok {
		return x.CharacterId
	}
	return 0
}

func (x *EventSpawn) GetPlayer() *Player {
	if x, ok := x.GetObject().(*EventSpawn_Player); ok {
		return x.Player
	}
	return nil
}

type isEventSpawn_Object interface {
	isEventSpawn_Object()
}

type EventSpawn_Entity struct {
	Entity *Entity `protobuf:"bytes,2,opt,name=entity,proto3,oneof"`
}

type EventSpawn_CharacterId struct {
	CharacterId uint64 `protobuf:"varint,3,opt,name=character_id,json=characterId,proto3,oneof"`
}

type EventSpawn_Player struct {
	Player *Player `protobuf:"bytes,4,opt,name=player,proto3,oneof"`
}

func (*EventSpawn_Entity) isEventSpawn_Object() {}

func (*EventSpawn_CharacterId) isEventSpawn_Object() {}

func (*EventSpawn_Player) isEventSpawn_Object() {}

type EventRemove struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectIds []uint64 `protobuf:"varint,2,rep,packed,name=object_ids,json=objectIds,proto3" json:"object_ids,omitempty"`
}

func (x *EventRemove) Reset() {
	*x = EventRemove{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsb_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventRemove) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventRemove) ProtoMessage() {}

func (x *EventRemove) ProtoReflect() protoreflect.Message {
	mi := &file_lsb_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventRemove.ProtoReflect.Descriptor instead.
func (*EventRemove) Descriptor() ([]byte, []int) {
	return file_lsb_proto_rawDescGZIP(), []int{3}
}

func (x *EventRemove) GetObjectIds() []uint64 {
	if x != nil {
		return x.ObjectIds
	}
	return nil
}

type EventTrigger struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceId          uint64   `protobuf:"varint,1,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	TriggerId         uint32   `protobuf:"varint,2,opt,name=trigger_id,json=triggerId,proto3" json:"trigger_id,omitempty"`
	TriggerSignalType uint32   `protobuf:"varint,3,opt,name=trigger_signal_type,json=triggerSignalType,proto3" json:"trigger_signal_type,omitempty"`
	Players           []uint64 `protobuf:"varint,4,rep,packed,name=players,proto3" json:"players,omitempty"`
}

func (x *EventTrigger) Reset() {
	*x = EventTrigger{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsb_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventTrigger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventTrigger) ProtoMessage() {}

func (x *EventTrigger) ProtoReflect() protoreflect.Message {
	mi := &file_lsb_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventTrigger.ProtoReflect.Descriptor instead.
func (*EventTrigger) Descriptor() ([]byte, []int) {
	return file_lsb_proto_rawDescGZIP(), []int{4}
}

func (x *EventTrigger) GetSourceId() uint64 {
	if x != nil {
		return x.SourceId
	}
	return 0
}

func (x *EventTrigger) GetTriggerId() uint32 {
	if x != nil {
		return x.TriggerId
	}
	return 0
}

func (x *EventTrigger) GetTriggerSignalType() uint32 {
	if x != nil {
		return x.TriggerSignalType
	}
	return 0
}

func (x *EventTrigger) GetPlayers() []uint64 {
	if x != nil {
		return x.Players
	}
	return nil
}

type EventCounter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId uint64 `protobuf:"varint,1,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	SourceId uint64 `protobuf:"varint,2,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	Type     uint32 `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *EventCounter) Reset() {
	*x = EventCounter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsb_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventCounter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventCounter) ProtoMessage() {}

func (x *EventCounter) ProtoReflect() protoreflect.Message {
	mi := &file_lsb_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventCounter.ProtoReflect.Descriptor instead.
func (*EventCounter) Descriptor() ([]byte, []int) {
	return file_lsb_proto_rawDescGZIP(), []int{5}
}

func (x *EventCounter) GetTargetId() uint64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *EventCounter) GetSourceId() uint64 {
	if x != nil {
		return x.SourceId
	}
	return 0
}

func (x *EventCounter) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type EventDeath struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId uint64 `protobuf:"varint,1,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	SourceId uint64 `protobuf:"varint,2,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
}

func (x *EventDeath) Reset() {
	*x = EventDeath{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsb_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventDeath) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventDeath) ProtoMessage() {}

func (x *EventDeath) ProtoReflect() protoreflect.Message {
	mi := &file_lsb_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventDeath.ProtoReflect.Descriptor instead.
func (*EventDeath) Descriptor() ([]byte, []int) {
	return file_lsb_proto_rawDescGZIP(), []int{6}
}

func (x *EventDeath) GetTargetId() uint64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *EventDeath) GetSourceId() uint64 {
	if x != nil {
		return x.SourceId
	}
	return 0
}

type EventDamage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceId      uint64                         `protobuf:"varint,1,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	SkillId       uint32                         `protobuf:"varint,2,opt,name=skill_id,json=skillId,proto3" json:"skill_id,omitempty"`
	SkillEffectId uint32                         `protobuf:"varint,3,opt,name=skill_effect_id,json=skillEffectId,proto3" json:"skill_effect_id,omitempty"`
	Hits          []*EventDamage_SingleDamageHit `protobuf:"bytes,4,rep,name=hits,proto3" json:"hits,omitempty"`
}

func (x *EventDamage) Reset() {
	*x = EventDamage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsb_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventDamage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventDamage) ProtoMessage() {}

func (x *EventDamage) ProtoReflect() protoreflect.Message {
	mi := &file_lsb_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventDamage.ProtoReflect.Descriptor instead.
func (*EventDamage) Descriptor() ([]byte, []int) {
	return file_lsb_proto_rawDescGZIP(), []int{7}
}

func (x *EventDamage) GetSourceId() uint64 {
	if x != nil {
		return x.SourceId
	}
	return 0
}

func (x *EventDamage) GetSkillId() uint32 {
	if x != nil {
		return x.SkillId
	}
	return 0
}

func (x *EventDamage) GetSkillEffectId() uint32 {
	if x != nil {
		return x.SkillEffectId
	}
	return 0
}

func (x *EventDamage) GetHits() []*EventDamage_SingleDamageHit {
	if x != nil {
		return x.Hits
	}
	return nil
}

type EventStatusEffectAdd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusEffectId   uint32 `protobuf:"varint,1,opt,name=status_effect_id,json=statusEffectId,proto3" json:"status_effect_id,omitempty"`
	EffectInstanceId uint32 `protobuf:"varint,2,opt,name=effect_instance_id,json=effectInstanceId,proto3" json:"effect_instance_id,omitempty"`
	SourceId         uint64 `protobuf:"varint,3,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	TargetId         uint64 `protobuf:"varint,4,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	EndTick          uint64 `protobuf:"varint,5,opt,name=end_tick,json=endTick,proto3" json:"end_tick,omitempty"`
	Value            uint32 `protobuf:"varint,6,opt,name=value,proto3" json:"value,omitempty"`
	TotalTime        uint32 `protobuf:"varint,7,opt,name=total_time,json=totalTime,proto3" json:"total_time,omitempty"`
}

func (x *EventStatusEffectAdd) Reset() {
	*x = EventStatusEffectAdd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsb_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventStatusEffectAdd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventStatusEffectAdd) ProtoMessage() {}

func (x *EventStatusEffectAdd) ProtoReflect() protoreflect.Message {
	mi := &file_lsb_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventStatusEffectAdd.ProtoReflect.Descriptor instead.
func (*EventStatusEffectAdd) Descriptor() ([]byte, []int) {
	return file_lsb_proto_rawDescGZIP(), []int{8}
}

func (x *EventStatusEffectAdd) GetStatusEffectId() uint32 {
	if x != nil {
		return x.StatusEffectId
	}
	return 0
}

func (x *EventStatusEffectAdd) GetEffectInstanceId() uint32 {
	if x != nil {
		return x.EffectInstanceId
	}
	return 0
}

func (x *EventStatusEffectAdd) GetSourceId() uint64 {
	if x != nil {
		return x.SourceId
	}
	return 0
}

func (x *EventStatusEffectAdd) GetTargetId() uint64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *EventStatusEffectAdd) GetEndTick() uint64 {
	if x != nil {
		return x.EndTick
	}
	return 0
}

func (x *EventStatusEffectAdd) GetValue() uint32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *EventStatusEffectAdd) GetTotalTime() uint32 {
	if x != nil {
		return x.TotalTime
	}
	return 0
}

type EventStatusEffectUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EffectInstanceId uint32 `protobuf:"varint,1,opt,name=effect_instance_id,json=effectInstanceId,proto3" json:"effect_instance_id,omitempty"`
	PlayerId         uint64 `protobuf:"varint,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Value            uint32 `protobuf:"varint,3,opt,name=value,proto3" json:"value,omitempty"`
	Expiration       uint64 `protobuf:"varint,4,opt,name=expiration,proto3" json:"expiration,omitempty"`
}

func (x *EventStatusEffectUpdate) Reset() {
	*x = EventStatusEffectUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsb_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventStatusEffectUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventStatusEffectUpdate) ProtoMessage() {}

func (x *EventStatusEffectUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_lsb_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventStatusEffectUpdate.ProtoReflect.Descriptor instead.
func (*EventStatusEffectUpdate) Descriptor() ([]byte, []int) {
	return file_lsb_proto_rawDescGZIP(), []int{9}
}

func (x *EventStatusEffectUpdate) GetEffectInstanceId() uint32 {
	if x != nil {
		return x.EffectInstanceId
	}
	return 0
}

func (x *EventStatusEffectUpdate) GetPlayerId() uint64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *EventStatusEffectUpdate) GetValue() uint32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *EventStatusEffectUpdate) GetExpiration() uint64 {
	if x != nil {
		return x.Expiration
	}
	return 0
}

type EventStatusEffectRemove struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectId        uint64   `protobuf:"varint,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	Reason          uint32   `protobuf:"varint,2,opt,name=reason,proto3" json:"reason,omitempty"`
	StatusEffectIds []uint32 `protobuf:"varint,3,rep,packed,name=status_effect_ids,json=statusEffectIds,proto3" json:"status_effect_ids,omitempty"`
}

func (x *EventStatusEffectRemove) Reset() {
	*x = EventStatusEffectRemove{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsb_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventStatusEffectRemove) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventStatusEffectRemove) ProtoMessage() {}

func (x *EventStatusEffectRemove) ProtoReflect() protoreflect.Message {
	mi := &file_lsb_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventStatusEffectRemove.ProtoReflect.Descriptor instead.
func (*EventStatusEffectRemove) Descriptor() ([]byte, []int) {
	return file_lsb_proto_rawDescGZIP(), []int{10}
}

func (x *EventStatusEffectRemove) GetObjectId() uint64 {
	if x != nil {
		return x.ObjectId
	}
	return 0
}

func (x *EventStatusEffectRemove) GetReason() uint32 {
	if x != nil {
		return x.Reason
	}
	return 0
}

func (x *EventStatusEffectRemove) GetStatusEffectIds() []uint32 {
	if x != nil {
		return x.StatusEffectIds
	}
	return nil
}

type EventSkillUse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceId  uint64     `protobuf:"varint,1,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	SkillInfo *SkillInfo `protobuf:"bytes,3,opt,name=skill_info,json=skillInfo,proto3" json:"skill_info,omitempty"`
}

func (x *EventSkillUse) Reset() {
	*x = EventSkillUse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsb_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventSkillUse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSkillUse) ProtoMessage() {}

func (x *EventSkillUse) ProtoReflect() protoreflect.Message {
	mi := &file_lsb_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventSkillUse.ProtoReflect.Descriptor instead.
func (*EventSkillUse) Descriptor() ([]byte, []int) {
	return file_lsb_proto_rawDescGZIP(), []int{11}
}

func (x *EventSkillUse) GetSourceId() uint64 {
	if x != nil {
		return x.SourceId
	}
	return 0
}

func (x *EventSkillUse) GetSkillInfo() *SkillInfo {
	if x != nil {
		return x.SkillInfo
	}
	return nil
}

type EventStaggerState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectId             uint64 `protobuf:"varint,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	DecreasePoint        uint32 `protobuf:"varint,2,opt,name=decrease_point,json=decreasePoint,proto3" json:"decrease_point,omitempty"`
	ParalyzationPoint    uint32 `protobuf:"varint,3,opt,name=paralyzation_point,json=paralyzationPoint,proto3" json:"paralyzation_point,omitempty"`
	ParalyzationMaxPoint uint32 `protobuf:"varint,4,opt,name=paralyzation_max_point,json=paralyzationMaxPoint,proto3" json:"paralyzation_max_point,omitempty"`
}

func (x *EventStaggerState) Reset() {
	*x = EventStaggerState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsb_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventStaggerState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventStaggerState) ProtoMessage() {}

func (x *EventStaggerState) ProtoReflect() protoreflect.Message {
	mi := &file_lsb_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventStaggerState.ProtoReflect.Descriptor instead.
func (*EventStaggerState) Descriptor() ([]byte, []int) {
	return file_lsb_proto_rawDescGZIP(), []int{12}
}

func (x *EventStaggerState) GetObjectId() uint64 {
	if x != nil {
		return x.ObjectId
	}
	return 0
}

func (x *EventStaggerState) GetDecreasePoint() uint32 {
	if x != nil {
		return x.DecreasePoint
	}
	return 0
}

func (x *EventStaggerState) GetParalyzationPoint() uint32 {
	if x != nil {
		return x.ParalyzationPoint
	}
	return 0
}

func (x *EventStaggerState) GetParalyzationMaxPoint() uint32 {
	if x != nil {
		return x.ParalyzationMaxPoint
	}
	return 0
}

type EventPlayerHealth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId  uint64 `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	CurrentHp uint32 `protobuf:"varint,2,opt,name=current_hp,json=currentHp,proto3" json:"current_hp,omitempty"`
	MaxHp     uint32 `protobuf:"varint,3,opt,name=max_hp,json=maxHp,proto3" json:"max_hp,omitempty"`
}

func (x *EventPlayerHealth) Reset() {
	*x = EventPlayerHealth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsb_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventPlayerHealth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventPlayerHealth) ProtoMessage() {}

func (x *EventPlayerHealth) ProtoReflect() protoreflect.Message {
	mi := &file_lsb_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventPlayerHealth.ProtoReflect.Descriptor instead.
func (*EventPlayerHealth) Descriptor() ([]byte, []int) {
	return file_lsb_proto_rawDescGZIP(), []int{13}
}

func (x *EventPlayerHealth) GetPlayerId() uint64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *EventPlayerHealth) GetCurrentHp() uint32 {
	if x != nil {
		return x.CurrentHp
	}
	return 0
}

func (x *EventPlayerHealth) GetMaxHp() uint32 {
	if x != nil {
		return x.MaxHp
	}
	return 0
}

type Character struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CharacterId uint64  `protobuf:"varint,1,opt,name=character_id,json=characterId,proto3" json:"character_id,omitempty"`
	Name        string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Level       uint32  `protobuf:"varint,3,opt,name=level,proto3" json:"level,omitempty"`
	GearLevel   float32 `protobuf:"fixed32,4,opt,name=gear_level,json=gearLevel,proto3" json:"gear_level,omitempty"`
	ClassId     uint32  `protobuf:"varint,5,opt,name=class_id,json=classId,proto3" json:"class_id,omitempty"`
}

func (x *Character) Reset() {
	*x = Character{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsb_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Character) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Character) ProtoMessage() {}

func (x *Character) ProtoReflect() protoreflect.Message {
	mi := &file_lsb_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Character.ProtoReflect.Descriptor instead.
func (*Character) Descriptor() ([]byte, []int) {
	return file_lsb_proto_rawDescGZIP(), []int{14}
}

func (x *Character) GetCharacterId() uint64 {
	if x != nil {
		return x.CharacterId
	}
	return 0
}

func (x *Character) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Character) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *Character) GetGearLevel() float32 {
	if x != nil {
		return x.GearLevel
	}
	return 0
}

func (x *Character) GetClassId() uint32 {
	if x != nil {
		return x.ClassId
	}
	return 0
}

type Player struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyId   uint32     `protobuf:"varint,1,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
	Character *Character `protobuf:"bytes,2,opt,name=character,proto3" json:"character,omitempty"`
	IsLocal   bool       `protobuf:"varint,3,opt,name=is_local,json=isLocal,proto3" json:"is_local,omitempty"`
}

func (x *Player) Reset() {
	*x = Player{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsb_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Player) ProtoMessage() {}

func (x *Player) ProtoReflect() protoreflect.Message {
	mi := &file_lsb_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Player.ProtoReflect.Descriptor instead.
func (*Player) Descriptor() ([]byte, []int) {
	return file_lsb_proto_rawDescGZIP(), []int{15}
}

func (x *Player) GetPartyId() uint32 {
	if x != nil {
		return x.PartyId
	}
	return 0
}

func (x *Player) GetCharacter() *Character {
	if x != nil {
		return x.Character
	}
	return nil
}

func (x *Player) GetIsLocal() bool {
	if x != nil {
		return x.IsLocal
	}
	return false
}

type SkillInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkillId       uint32 `protobuf:"varint,1,opt,name=skill_id,json=skillId,proto3" json:"skill_id,omitempty"`
	Level         uint32 `protobuf:"varint,2,opt,name=level,proto3" json:"level,omitempty"`
	TripodIndex_1 uint32 `protobuf:"varint,3,opt,name=tripod_index_1,json=tripodIndex1,proto3" json:"tripod_index_1,omitempty"`
	TripodIndex_2 uint32 `protobuf:"varint,4,opt,name=tripod_index_2,json=tripodIndex2,proto3" json:"tripod_index_2,omitempty"`
	TripodIndex_3 uint32 `protobuf:"varint,5,opt,name=tripod_index_3,json=tripodIndex3,proto3" json:"tripod_index_3,omitempty"`
	TripodLevel_1 uint32 `protobuf:"varint,6,opt,name=tripod_level_1,json=tripodLevel1,proto3" json:"tripod_level_1,omitempty"`
	TripodLevel_2 uint32 `protobuf:"varint,7,opt,name=tripod_level_2,json=tripodLevel2,proto3" json:"tripod_level_2,omitempty"`
	TripodLevel_3 uint32 `protobuf:"varint,8,opt,name=tripod_level_3,json=tripodLevel3,proto3" json:"tripod_level_3,omitempty"`
}

func (x *SkillInfo) Reset() {
	*x = SkillInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsb_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkillInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkillInfo) ProtoMessage() {}

func (x *SkillInfo) ProtoReflect() protoreflect.Message {
	mi := &file_lsb_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkillInfo.ProtoReflect.Descriptor instead.
func (*SkillInfo) Descriptor() ([]byte, []int) {
	return file_lsb_proto_rawDescGZIP(), []int{16}
}

func (x *SkillInfo) GetSkillId() uint32 {
	if x != nil {
		return x.SkillId
	}
	return 0
}

func (x *SkillInfo) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *SkillInfo) GetTripodIndex_1() uint32 {
	if x != nil {
		return x.TripodIndex_1
	}
	return 0
}

func (x *SkillInfo) GetTripodIndex_2() uint32 {
	if x != nil {
		return x.TripodIndex_2
	}
	return 0
}

func (x *SkillInfo) GetTripodIndex_3() uint32 {
	if x != nil {
		return x.TripodIndex_3
	}
	return 0
}

func (x *SkillInfo) GetTripodLevel_1() uint32 {
	if x != nil {
		return x.TripodLevel_1
	}
	return 0
}

func (x *SkillInfo) GetTripodLevel_2() uint32 {
	if x != nil {
		return x.TripodLevel_2
	}
	return 0
}

func (x *SkillInfo) GetTripodLevel_3() uint32 {
	if x != nil {
		return x.TripodLevel_3
	}
	return 0
}

type Entity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectId uint64 `protobuf:"varint,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	OwnerId  uint64 `protobuf:"varint,2,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	TypeId   uint32 `protobuf:"varint,3,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`
	MaxHp    uint32 `protobuf:"varint,4,opt,name=max_hp,json=maxHp,proto3" json:"max_hp,omitempty"`
}

func (x *Entity) Reset() {
	*x = Entity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsb_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Entity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Entity) ProtoMessage() {}

func (x *Entity) ProtoReflect() protoreflect.Message {
	mi := &file_lsb_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Entity.ProtoReflect.Descriptor instead.
func (*Entity) Descriptor() ([]byte, []int) {
	return file_lsb_proto_rawDescGZIP(), []int{17}
}

func (x *Entity) GetObjectId() uint64 {
	if x != nil {
		return x.ObjectId
	}
	return 0
}

func (x *Entity) GetOwnerId() uint64 {
	if x != nil {
		return x.OwnerId
	}
	return 0
}

func (x *Entity) GetTypeId() uint32 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *Entity) GetMaxHp() uint32 {
	if x != nil {
		return x.MaxHp
	}
	return 0
}

type Battle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start       *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	End         *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
	EncounterId uint32                 `protobuf:"varint,3,opt,name=encounter_id,json=encounterId,proto3" json:"encounter_id,omitempty"`
	Players     map[uint64]*Player     `protobuf:"bytes,4,rep,name=players,proto3" json:"players,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Entities    map[uint64]*Entity     `protobuf:"bytes,5,rep,name=entities,proto3" json:"entities,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Events      []*Event               `protobuf:"bytes,6,rep,name=events,proto3" json:"events,omitempty"`
	Result      BattleResult           `protobuf:"varint,7,opt,name=result,proto3,enum=lsb.v1.BattleResult" json:"result,omitempty"`
}

func (x *Battle) Reset() {
	*x = Battle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsb_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Battle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Battle) ProtoMessage() {}

func (x *Battle) ProtoReflect() protoreflect.Message {
	mi := &file_lsb_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Battle.ProtoReflect.Descriptor instead.
func (*Battle) Descriptor() ([]byte, []int) {
	return file_lsb_proto_rawDescGZIP(), []int{18}
}

func (x *Battle) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *Battle) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *Battle) GetEncounterId() uint32 {
	if x != nil {
		return x.EncounterId
	}
	return 0
}

func (x *Battle) GetPlayers() map[uint64]*Player {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *Battle) GetEntities() map[uint64]*Entity {
	if x != nil {
		return x.Entities
	}
	return nil
}

func (x *Battle) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *Battle) GetResult() BattleResult {
	if x != nil {
		return x.Result
	}
	return BattleResult_UNKNOWN
}

type EventsBatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Events []*Event `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *EventsBatch) Reset() {
	*x = EventsBatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsb_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventsBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventsBatch) ProtoMessage() {}

func (x *EventsBatch) ProtoReflect() protoreflect.Message {
	mi := &file_lsb_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventsBatch.ProtoReflect.Descriptor instead.
func (*EventsBatch) Descriptor() ([]byte, []int) {
	return file_lsb_proto_rawDescGZIP(), []int{19}
}

func (x *EventsBatch) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

type EventDamage_SingleDamageHit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId    uint64 `protobuf:"varint,1,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	Damage      uint32 `protobuf:"varint,2,opt,name=damage,proto3" json:"damage,omitempty"`
	Dot         uint32 `protobuf:"varint,3,opt,name=dot,proto3" json:"dot,omitempty"`
	Crit        bool   `protobuf:"varint,4,opt,name=crit,proto3" json:"crit,omitempty"`
	BackAttack  bool   `protobuf:"varint,5,opt,name=back_attack,json=backAttack,proto3" json:"back_attack,omitempty"`
	FrontAttack bool   `protobuf:"varint,6,opt,name=front_attack,json=frontAttack,proto3" json:"front_attack,omitempty"`
}

func (x *EventDamage_SingleDamageHit) Reset() {
	*x = EventDamage_SingleDamageHit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lsb_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventDamage_SingleDamageHit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventDamage_SingleDamageHit) ProtoMessage() {}

func (x *EventDamage_SingleDamageHit) ProtoReflect() protoreflect.Message {
	mi := &file_lsb_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventDamage_SingleDamageHit.ProtoReflect.Descriptor instead.
func (*EventDamage_SingleDamageHit) Descriptor() ([]byte, []int) {
	return file_lsb_proto_rawDescGZIP(), []int{7, 0}
}

func (x *EventDamage_SingleDamageHit) GetTargetId() uint64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *EventDamage_SingleDamageHit) GetDamage() uint32 {
	if x != nil {
		return x.Damage
	}
	return 0
}

func (x *EventDamage_SingleDamageHit) GetDot() uint32 {
	if x != nil {
		return x.Dot
	}
	return 0
}

func (x *EventDamage_SingleDamageHit) GetCrit() bool {
	if x != nil {
		return x.Crit
	}
	return false
}

func (x *EventDamage_SingleDamageHit) GetBackAttack() bool {
	if x != nil {
		return x.BackAttack
	}
	return false
}

func (x *EventDamage_SingleDamageHit) GetFrontAttack() bool {
	if x != nil {
		return x.FrontAttack
	}
	return false
}

var File_lsb_proto protoreflect.FileDescriptor

var file_lsb_proto_rawDesc = []byte{
	0x0a, 0x09, 0x6c, 0x73, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x6c, 0x73, 0x62,
	0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x85, 0x06, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x2a,
	0x0a, 0x02, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x02, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x05, 0x73, 0x70,
	0x61, 0x77, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c, 0x73, 0x62, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x70, 0x61, 0x77, 0x6e, 0x48, 0x00, 0x52,
	0x05, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x12, 0x2d, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6c, 0x73, 0x62, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x48, 0x00, 0x52, 0x06, 0x72,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x30, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6c, 0x73, 0x62, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x07,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x05, 0x64, 0x65, 0x61, 0x74, 0x68,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c, 0x73, 0x62, 0x2e, 0x76, 0x31, 0x2e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x61, 0x74, 0x68, 0x48, 0x00, 0x52, 0x05, 0x64, 0x65,
	0x61, 0x74, 0x68, 0x12, 0x2d, 0x0a, 0x06, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6c, 0x73, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x06, 0x64, 0x61, 0x6d, 0x61,
	0x67, 0x65, 0x12, 0x30, 0x0a, 0x07, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6c, 0x73, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x48, 0x00, 0x52, 0x07, 0x74, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x12, 0x4a, 0x0a, 0x11, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x65,
	0x66, 0x66, 0x65, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x6c, 0x73, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x41, 0x64, 0x64, 0x48, 0x00, 0x52,
	0x0f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x41, 0x64, 0x64,
	0x12, 0x53, 0x0a, 0x14, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x65, 0x66, 0x66, 0x65, 0x63,
	0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x6c, 0x73, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48,
	0x00, 0x52, 0x12, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x53, 0x0a, 0x14, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f,
	0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6c, 0x73, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x48, 0x00, 0x52, 0x12, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x34, 0x0a, 0x09, 0x73, 0x6b,
	0x69, 0x6c, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x6c, 0x73, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x6b, 0x69, 0x6c,
	0x6c, 0x55, 0x73, 0x65, 0x48, 0x00, 0x52, 0x08, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x55, 0x73, 0x65,
	0x12, 0x40, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x73, 0x62, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x67, 0x67, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x67, 0x67, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x40, 0x0a, 0x0d, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x68, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x73, 0x62, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x48, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x48, 0x00, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x48, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x25, 0x0a, 0x0b,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x22, 0xac, 0x01, 0x0a, 0x0a, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x70, 0x61,
	0x77, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x28, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x6c, 0x73, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x48,
	0x00, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x0c, 0x63, 0x68, 0x61,
	0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x48,
	0x00, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x28,
	0x0a, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x6c, 0x73, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x48, 0x00,
	0x52, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x08, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x22, 0x2c, 0x0a, 0x0b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73,
	0x22, 0x94, 0x01, 0x0a, 0x0c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2e, 0x0a,
	0x13, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x74, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x22, 0x5c, 0x0a, 0x0c, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x46, 0x0a, 0x0a, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x65,
	0x61, 0x74, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x22, 0xd9, 0x02,
	0x0a, 0x0b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6b,
	0x69, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x6b,
	0x69, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x65,
	0x66, 0x66, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d,
	0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x37, 0x0a,
	0x04, 0x68, 0x69, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6c, 0x73,
	0x62, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65,
	0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x48, 0x69, 0x74,
	0x52, 0x04, 0x68, 0x69, 0x74, 0x73, 0x1a, 0xb0, 0x01, 0x0a, 0x0f, 0x53, 0x69, 0x6e, 0x67, 0x6c,
	0x65, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x48, 0x69, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x6d, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x64, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x64, 0x6f,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x72, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x04, 0x63, 0x72, 0x69, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x62, 0x61, 0x63, 0x6b,
	0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x5f,
	0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x66, 0x72,
	0x6f, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x22, 0xf8, 0x01, 0x0a, 0x14, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x41,
	0x64, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x65, 0x66, 0x66,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12,
	0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x63, 0x6b,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0x9a, 0x01, 0x0a, 0x17, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x2c, 0x0a, 0x12, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x65, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x7a, 0x0a, 0x17, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x65, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x49, 0x64, 0x73, 0x22, 0x5e, 0x0a,
	0x0d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x0a, 0x73,
	0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x6c, 0x73, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x09, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xbc, 0x01,
	0x0a, 0x11, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x67, 0x67, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x64, 0x65, 0x63, 0x72, 0x65, 0x61,
	0x73, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x12, 0x70, 0x61, 0x72, 0x61, 0x6c,
	0x79, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x11, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x79, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x16, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x79,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x79, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x78, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x66, 0x0a, 0x11,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x48, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x68, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x48, 0x70, 0x12, 0x15, 0x0a,
	0x06, 0x6d, 0x61, 0x78, 0x5f, 0x68, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6d,
	0x61, 0x78, 0x48, 0x70, 0x22, 0x92, 0x01, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x1d, 0x0a, 0x0a, 0x67, 0x65, 0x61, 0x72, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x09, 0x67, 0x65, 0x61, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x19,
	0x0a, 0x08, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x22, 0x6f, 0x0a, 0x06, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x2f,
	0x0a, 0x09, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x6c, 0x73, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x52, 0x09, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x12,
	0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x69, 0x73, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x22, 0xa0, 0x02, 0x0a, 0x09, 0x53,
	0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6b, 0x69, 0x6c,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x6b, 0x69, 0x6c,
	0x6c, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x72, 0x69,
	0x70, 0x6f, 0x64, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x31, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0c, 0x74, 0x72, 0x69, 0x70, 0x6f, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x31, 0x12,
	0x24, 0x0a, 0x0e, 0x74, 0x72, 0x69, 0x70, 0x6f, 0x64, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f,
	0x32, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x74, 0x72, 0x69, 0x70, 0x6f, 0x64, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x32, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x72, 0x69, 0x70, 0x6f, 0x64, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x33, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x74,
	0x72, 0x69, 0x70, 0x6f, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x33, 0x12, 0x24, 0x0a, 0x0e, 0x74,
	0x72, 0x69, 0x70, 0x6f, 0x64, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x31, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0c, 0x74, 0x72, 0x69, 0x70, 0x6f, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x31, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x72, 0x69, 0x70, 0x6f, 0x64, 0x5f, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x5f, 0x32, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x74, 0x72, 0x69, 0x70, 0x6f,
	0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x32, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x72, 0x69, 0x70, 0x6f,
	0x64, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x33, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0c, 0x74, 0x72, 0x69, 0x70, 0x6f, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x33, 0x22, 0x70, 0x0a,
	0x06, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x61, 0x78, 0x5f,
	0x68, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6d, 0x61, 0x78, 0x48, 0x70, 0x22,
	0xea, 0x03, 0x0a, 0x06, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x2c, 0x0a, 0x03,
	0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6e,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x65, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x35, 0x0a,
	0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x6c, 0x73, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x73, 0x12, 0x38, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6c, 0x73, 0x62, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x25,
	0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x6c, 0x73, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2c, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x6c, 0x73, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x1a, 0x4a, 0x0a, 0x0c, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6c, 0x73, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a,
	0x4b, 0x0a, 0x0d, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x6c, 0x73, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x34, 0x0a, 0x0b,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x25, 0x0a, 0x06, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6c, 0x73,
	0x62, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x2a, 0x40, 0x0a, 0x0c, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12,
	0x11, 0x0a, 0x0d, 0x44, 0x55, 0x4e, 0x47, 0x45, 0x4f, 0x4e, 0x5f, 0x43, 0x4c, 0x45, 0x41, 0x52,
	0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x44, 0x55, 0x4e, 0x47, 0x45, 0x4f, 0x4e, 0x5f, 0x46, 0x41,
	0x49, 0x4c, 0x10, 0x02, 0x42, 0x2c, 0x5a, 0x2a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x62, 0x31, 0x6e, 0x61, 0x72, 0x79, 0x74, 0x68, 0x31, 0x65, 0x66, 0x2f, 0x73,
	0x68, 0x61, 0x6e, 0x64, 0x69, 0x2f, 0x6c, 0x73, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_lsb_proto_rawDescOnce sync.Once
	file_lsb_proto_rawDescData = file_lsb_proto_rawDesc
)

func file_lsb_proto_rawDescGZIP() []byte {
	file_lsb_proto_rawDescOnce.Do(func() {
		file_lsb_proto_rawDescData = protoimpl.X.CompressGZIP(file_lsb_proto_rawDescData)
	})
	return file_lsb_proto_rawDescData
}

var file_lsb_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_lsb_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_lsb_proto_goTypes = []interface{}{
	(BattleResult)(0),                   // 0: lsb.v1.BattleResult
	(*Event)(nil),                       // 1: lsb.v1.Event
	(*EventRotate)(nil),                 // 2: lsb.v1.EventRotate
	(*EventSpawn)(nil),                  // 3: lsb.v1.EventSpawn
	(*EventRemove)(nil),                 // 4: lsb.v1.EventRemove
	(*EventTrigger)(nil),                // 5: lsb.v1.EventTrigger
	(*EventCounter)(nil),                // 6: lsb.v1.EventCounter
	(*EventDeath)(nil),                  // 7: lsb.v1.EventDeath
	(*EventDamage)(nil),                 // 8: lsb.v1.EventDamage
	(*EventStatusEffectAdd)(nil),        // 9: lsb.v1.EventStatusEffectAdd
	(*EventStatusEffectUpdate)(nil),     // 10: lsb.v1.EventStatusEffectUpdate
	(*EventStatusEffectRemove)(nil),     // 11: lsb.v1.EventStatusEffectRemove
	(*EventSkillUse)(nil),               // 12: lsb.v1.EventSkillUse
	(*EventStaggerState)(nil),           // 13: lsb.v1.EventStaggerState
	(*EventPlayerHealth)(nil),           // 14: lsb.v1.EventPlayerHealth
	(*Character)(nil),                   // 15: lsb.v1.Character
	(*Player)(nil),                      // 16: lsb.v1.Player
	(*SkillInfo)(nil),                   // 17: lsb.v1.SkillInfo
	(*Entity)(nil),                      // 18: lsb.v1.Entity
	(*Battle)(nil),                      // 19: lsb.v1.Battle
	(*EventsBatch)(nil),                 // 20: lsb.v1.EventsBatch
	(*EventDamage_SingleDamageHit)(nil), // 21: lsb.v1.EventDamage.SingleDamageHit
	nil,                                 // 22: lsb.v1.Battle.PlayersEntry
	nil,                                 // 23: lsb.v1.Battle.EntitiesEntry
	(*timestamppb.Timestamp)(nil),       // 24: google.protobuf.Timestamp
}
var file_lsb_proto_depIdxs = []int32{
	24, // 0: lsb.v1.Event.ts:type_name -> google.protobuf.Timestamp
	3,  // 1: lsb.v1.Event.spawn:type_name -> lsb.v1.EventSpawn
	4,  // 2: lsb.v1.Event.remove:type_name -> lsb.v1.EventRemove
	6,  // 3: lsb.v1.Event.counter:type_name -> lsb.v1.EventCounter
	7,  // 4: lsb.v1.Event.death:type_name -> lsb.v1.EventDeath
	8,  // 5: lsb.v1.Event.damage:type_name -> lsb.v1.EventDamage
	5,  // 6: lsb.v1.Event.trigger:type_name -> lsb.v1.EventTrigger
	9,  // 7: lsb.v1.Event.status_effect_add:type_name -> lsb.v1.EventStatusEffectAdd
	10, // 8: lsb.v1.Event.status_effect_update:type_name -> lsb.v1.EventStatusEffectUpdate
	11, // 9: lsb.v1.Event.status_effect_remove:type_name -> lsb.v1.EventStatusEffectRemove
	12, // 10: lsb.v1.Event.skill_use:type_name -> lsb.v1.EventSkillUse
	13, // 11: lsb.v1.Event.stagger_state:type_name -> lsb.v1.EventStaggerState
	14, // 12: lsb.v1.Event.player_health:type_name -> lsb.v1.EventPlayerHealth
	18, // 13: lsb.v1.EventSpawn.entity:type_name -> lsb.v1.Entity
	16, // 14: lsb.v1.EventSpawn.player:type_name -> lsb.v1.Player
	21, // 15: lsb.v1.EventDamage.hits:type_name -> lsb.v1.EventDamage.SingleDamageHit
	17, // 16: lsb.v1.EventSkillUse.skill_info:type_name -> lsb.v1.SkillInfo
	15, // 17: lsb.v1.Player.character:type_name -> lsb.v1.Character
	24, // 18: lsb.v1.Battle.start:type_name -> google.protobuf.Timestamp
	24, // 19: lsb.v1.Battle.end:type_name -> google.protobuf.Timestamp
	22, // 20: lsb.v1.Battle.players:type_name -> lsb.v1.Battle.PlayersEntry
	23, // 21: lsb.v1.Battle.entities:type_name -> lsb.v1.Battle.EntitiesEntry
	1,  // 22: lsb.v1.Battle.events:type_name -> lsb.v1.Event
	0,  // 23: lsb.v1.Battle.result:type_name -> lsb.v1.BattleResult
	1,  // 24: lsb.v1.EventsBatch.events:type_name -> lsb.v1.Event
	16, // 25: lsb.v1.Battle.PlayersEntry.value:type_name -> lsb.v1.Player
	18, // 26: lsb.v1.Battle.EntitiesEntry.value:type_name -> lsb.v1.Entity
	27, // [27:27] is the sub-list for method output_type
	27, // [27:27] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_lsb_proto_init() }
func file_lsb_proto_init() {
	if File_lsb_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_lsb_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsb_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventRotate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsb_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventSpawn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsb_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventRemove); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsb_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventTrigger); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsb_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventCounter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsb_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventDeath); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsb_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventDamage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsb_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventStatusEffectAdd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsb_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventStatusEffectUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsb_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventStatusEffectRemove); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsb_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventSkillUse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsb_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventStaggerState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsb_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventPlayerHealth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsb_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Character); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsb_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Player); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsb_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkillInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsb_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Entity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsb_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Battle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsb_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventsBatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lsb_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventDamage_SingleDamageHit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_lsb_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Event_Spawn)(nil),
		(*Event_Remove)(nil),
		(*Event_Counter)(nil),
		(*Event_Death)(nil),
		(*Event_Damage)(nil),
		(*Event_Trigger)(nil),
		(*Event_StatusEffectAdd)(nil),
		(*Event_StatusEffectUpdate)(nil),
		(*Event_StatusEffectRemove)(nil),
		(*Event_SkillUse)(nil),
		(*Event_StaggerState)(nil),
		(*Event_PlayerHealth)(nil),
	}
	file_lsb_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*EventSpawn_Entity)(nil),
		(*EventSpawn_CharacterId)(nil),
		(*EventSpawn_Player)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_lsb_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_lsb_proto_goTypes,
		DependencyIndexes: file_lsb_proto_depIdxs,
		EnumInfos:         file_lsb_proto_enumTypes,
		MessageInfos:      file_lsb_proto_msgTypes,
	}.Build()
	File_lsb_proto = out.File
	file_lsb_proto_rawDesc = nil
	file_lsb_proto_goTypes = nil
	file_lsb_proto_depIdxs = nil
}
